name: Cron Job

on:
  push:

jobs:
  fetch_all_pull_request_shas:
    runs-on: ubuntu-latest
    outputs:
      pr_details: ${{ steps.extract.outputs.pr_details }}
    env:
      API_URL: https://api.github.com/repos/redhat-developer/lsp4ij/pulls
    steps:
      - name: Extract PR numbers and merge_commit_shas
        shell: bash
        id: extract
        run: |
          pr_infos=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "${{ env.API_URL }}")

          # Extract PR numbers and merge_commit_sha values, excluding draft pull requests
          pr_details=$(echo "$pr_infos" | jq -r '.[] | select(.draft == false) | {number: .number, sha: .merge_commit_sha}')

          # Print the PR number and corresponding merge commit sha
          echo "PR number and merge commit sha:"
          echo "$pr_details" | jq -r '. | "PR #\(.number): \(.sha)"'

          # Check mergeable state of PRs
          echo "Checking mergeable state of PRs..."
          while IFS= read -r pr_detail; do
            pr_number=$(jq -r '.number' <<< "$pr_detail")
            pr_url="${{ env.API_URL }}/$pr_number"
            pr_detail=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$pr_url")
            mergeable_state=$(jq -r '.mergeable_state' <<< "$pr_detail")
            if [ "$mergeable_state" == "dirty" ]; then
              echo "##[warning] PR #$pr_number has a merge conflict."
            fi
          done <<< "$pr_details"

          # Create a JSON array string of PR numbers and SHAs
          pr_details_array=$(jq -nc '[inputs | select(.draft == false) | {number: .number, sha: .merge_commit_sha}]' <<< "$pr_infos")
          echo "pr_details=$pr_details_array" >> $GITHUB_OUTPUT
  

  # Run the LTI Tests against each open lsp4ij PRs
  call-build-workflow-for-each-merge-commit-sha:
    needs: fetch_all_pull_request_shas
    uses: ./.github/workflows/build.yaml
    strategy:
      fail-fast: false
      matrix:
        pr_details: ${{ fromJson(needs.fetch_all_pull_request_shas.outputs.pr_details) }}
    with:
      useLocalPlugin: true
      refLsp4ij: ${{ matrix.pr_details.sha }}
    name: Run LTI tests for PR #${{ matrix.pr_details.number }}

  # Run the LTI Tests against lsp4ij main branch
  call-build-workflow-for-lsp4ij-main-branch:
    uses: ./.github/workflows/build.yaml
    with:
      useLocalPlugin: true
      refLsp4ij: main
    name: Run LTI tests for Lsp4ij Main branch